###########################
#
# # appsnappr config variables
#
# image selection,
# mode selection,
# container naming
###########################

# # these variables are automatically imported by docker-compose on each project launch and live only to populate service keyed values, for interpolation into a final, verifiable and runnable docker-compose. 
# follow changes here with docker-compose config

COMPOSE_PROJECT_NAME=appsnappr

# germane to service 'site' in docker-compose, satisfying the entrypoint expected by the wsgi or asgi server 'command:' there, as module:app
MODULE=main
APP=app

#############
# # # Stage/Mode Quadlets -- one set @req'd to be uncommented: 
# # @prefixes like 'www' restricted, and no attempts made to validate
# # refactoring for sub-domains req'd

# development/staging LOCAL STARTER 
FQDN=appsnappr.com
HOSTNAME=appsnappr
ADMINEMAIL=snapped@development.com
COMPOSE_FILE=docker-compose.yml:./stages/docker-compose.dev.yml

# # production REMOTE VPS
# FQDN=production.com
# HOSTNAME:production
# ADMINEMAIL=snapped@production.com
# COMPOSE_FILE=docker-compose.yml:./stages/prod/docker-compose.prod.yml

# # not implemented
# FQDN=cicd.com
# HOSTNAME:cicd
# ADMINEMAIL=snapped@cicd.com
# COMPOSE_FILE=docker-compose.yml:./stages/docker-compose.cicd.yml

# # not implemented
# FQDN=experimental.com
# HOSTNAME:experimental
# ADMINEMAIL=snapped@experimental.com
# COMPOSE_FILE=docker-compose.yml:./stages/docker-compose.experimental.yml


# # @req'd image-relevant settings
PROJECT_TAG=appsnappr
MAINTAINER=App Snappr

# # presently, Nginx 'proxy' only
PROJECT_VER_MAJ=0
PROJECT_VER_MIN=0
PROJECT_VER_PATCH=0
PROJECT_VER=0.0.0

# # change per service base image versions here, * Nginx > 1.19
PROXY_IMG=nginx:1.22.0-alpine
SITE_IMG=python:3.10
#.4-alpine3.16
POSTGRES_IMG=postgres:14-alpine

# - on the surface, containers and networks are pruned with docker-compose down, docker image prune, docker container prune






